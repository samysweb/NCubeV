Theorem "ACAS_Reimport/Theorem 1: Correctness of implicit safe regions"
ProgramVariables
  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */

  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - ho */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real w;    /* velocity direction */
  Real a;

End.

Definitions
  Real hp;   /* puck height */
  Real rp;   /* puck radius */
  Real alo;  /* minimal vertical acceleration. Typically g/4 */

  /* velocity bound 1 = lower, -1 = upper */
  Real wUp = -1;
  Real wLo = 1;

  Real minI(Real v, Real w) = min(0, v*w);
  Real maxI(Real v, Real w, Real vlo) = max(0, w * (vlo - v));

  Bool Limpl(Real r, Real h, Real v, Real w, Real vlo, Real rv) <-> 
    \forall t \forall ro \forall ho (
        (0 <= t & t < maxI(v,w,vlo)/alo & ro = rv * t & ho = (w * alo)/2 * t^2 + v * t)
      | (t >= maxI(v,w,vlo)/alo & ro = rv * t & ho = vlo * t - w * maxI(v,w,vlo)^2/(2*alo))
      -> (abs(r - ro) > rp | w * h < w * ho - hp)
    );

  Bool init(Real rv) <-> rp>=0 & hp>0 & rv>=0 & alo>0;

  Bool loopInv(Real r, Real h, Real v, Real w, Real vlo, Real rv) <-> ( (w=wUp | w=wLo) & Limpl(r,h,v,w,vlo,rv) );
  
  HP motion ::= { {r' = -rv, h' = -v, v' = a & w*v>=w*vlo|w*a>=alo } };
End.

Problem    init(rv)
  & ( (w=wUp | w=wLo) & Limpl(r,h,v,w,vlo,rv) )
  ->
  [{ {
     { ?true;
       ++
       {{ w:=wUp; ++ w:=wLo; }
        vlo := *;
        ?Limpl(r,h,v,w,vlo,rv);
       }
     }
     a := *;
     }
     motion;
   }*@invariant(loopInv(r,h,v,w,vlo,rv))
  ] ( (abs(r) > rp | abs(h) > hp) & Limpl(r,h,v,w,vlo,rv) )
End.

Tactic "Proof ACAS X Theorem 1: Correctness of Implicit Safe Regions"

implyR('R=="init(rv)&(w=wUp()|w=wLo())&Limpl(r,h,v,w,vlo,rv)->[{{{?true;++{w:=wUp();++w:=wLo();}vlo:=*;?Limpl(r,h,v,w,vlo,rv);}a:=*;}motion{|^@|};}*]((abs(r)>rp()|abs(h)>hp())&Limpl(r,h,v,w,vlo,rv))");
andL('L=="init(rv)&(w=wUp()|w=wLo())&Limpl(r,h,v,w,vlo,rv)");
andL('L=="(w=wUp()|w=wLo())&Limpl(r,h,v,w,vlo,rv)");
loop("loopInv(r,h,v,w,vlo,rv)", 'R=="[{{{?true;++{w:=wUp();++w:=wLo();}vlo:=*;?Limpl(r,h,v,w,vlo,rv);}a:=*;}motion{|^@|};}*]((abs(r)>rp()|abs(h)>hp())&Limpl(r,h,v,w,vlo,rv))"); <(
  "Init":
    expandAllDefs("nil");
    propClose,
  "Post":
    andR('R=="(abs(r)>rp()|abs(h)>hp())&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())"); <(
      "abs(r)>rp()|abs(h)>hp()":
        useLemma("ACAS_Reimport/Safe use case lower bound", "prop"),
      "\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())":
        expandAllDefs("nil");
        propClose
    ),
  "Step":
    composeb('R=="[{{?true;++{w:=-1;++w:=1;}vlo:=*;?\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp());}a:=*;}{r'=-rv,h'=-v,v'=a&w*v>=w*vlo|w*a>=alo()}]loopInv(r,h,v,w,vlo,rv)");
    MR("loopInv(r,h,v,w,vlo,rv)&init(rv)", 'R=="[{?true;++{w:=-1;++w:=1;}vlo:=*;?\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp());}a:=*;][{r'=-rv,h'=-v,v'=a&w*v>=w*vlo|w*a>=alo()}]loopInv(r,h,v,w,vlo,rv)"); <(
      "Use Q->P":
        chaseAt('R=="[{?true;++{w:=-1;++w:=1;}vlo:=*;?\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp());}a:=*;](loopInv(r,h,v,w,vlo,rv)&init(rv))");
        expandAllDefs("nil");
        andL('L=="(w=-1|w=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())");
        simplify('R=="(true->\forall a (((w=-1|w=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))&rp()>=0&hp()>0&rv>=0&alo()>0))&\forall vlo (\forall t \forall ro \forall ho (0<=t&t < max(0,(- 1)*(vlo-v))/alo()&ro=rv*t&ho=(- 1)*alo()/2*t^2+v*t|t>=max(0,(- 1)*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-(- 1)*max(0,(- 1)*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|(- 1)*h < (- 1)*ho-hp())->\forall a (((-1=-1|-1=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,(- 1)*(vlo-v))/alo()&ro=rv*t&ho=(- 1)*alo()/2*t^2+v*t|t>=max(0,(- 1)*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-(- 1)*max(0,(- 1)*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|(- 1)*h < (- 1)*ho-hp()))&rp()>=0&hp()>0&rv>=0&alo()>0))&\forall vlo (\forall t \forall ro \forall ho (0<=t&t < max(0,1*(vlo-v))/alo()&ro=rv*t&ho=1*alo()/2*t^2+v*t|t>=max(0,1*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-1*max(0,1*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|1*h < 1*ho-hp())->\forall a (((1=-1|1=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,1*(vlo-v))/alo()&ro=rv*t&ho=1*alo()/2*t^2+v*t|t>=max(0,1*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-1*max(0,1*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|1*h < 1*ho-hp()))&rp()>=0&hp()>0&rv>=0&alo()>0))");
        allR('R=="\forall a (w=(-1)|w=1)");
        simplify('R=="w=(-1)|w=1");
        fullSimplify;
        closeTrue('R=="true"),
      "Show [a]Q":
        diffUnpackEvolDomain('R=="[{r'=-rv,h'=-v,v'=a&w*v>=w*vlo|w*a>=alo()}]loopInv(r,h,v,w,vlo,rv)");
        expandAllDefs("nil");
        useLemma("ACAS_Reimport/Safe lower bound", "prop")
    )
)

End.

End.