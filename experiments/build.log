[ Info: ("Running ", `julia --startup-file=no --compile=all --trace-compile=/tmp/snnt_trace.jl /root/bench/SNNT/snnt/deps/sysimage/trace_run.jl`)
[ Info: ("[OUT]", "[CMD] Using SMT solver: Z3")
[ Info: ("[ERR]", "WARNING: import of SymbolicUtils.is_literal_number into AST conflicts with an existing identifier; ignored.\nWARNING: using Z3.Config in module SMTInterface conflicts with an existing identifier.\nWARNING: both PGFPlots and Plots export \"Plots\"; uses of it in module OVERT must be qualified\nWARNING: both PGFPlots and Plots export \"plot\"; uses of it in module OVERT must be qualified")
[ Info: ("[OUT]", "[CMD] Parsed initial query: SNNT.AST.Query((((-1.0*x1<=0//1&1.0*x1<=100//1&-1.0*x2<=200//1&1.0*x2<=200//1&-1.0*x3<=100//1&1.0*x3<=100//1)&(-1.0*x1<0//1&((-1.0*rPos)+(0.005*(rVel^2.0)))<=0.0))->((1.0*x3<=100//1&-1.0*x3<=-100//1)|(-1.0*x3<=100//1&1.0*x3<100//1&(1.0*x3<0//1|-1.0*x3<0//1)&(((1.0*x20.1*x3<0//1|-1.0*x2<0//1)&((-0.1*rVel)+(-1.0*rPos)+(5.0e-5*(rAccpost^2.0))+(-0.0050000004*rAccpost)+(0.005*(rVel^2.0))+(0.0009999999*rAccpost*rVel))<0.0)|(((-0.1*rVel)+(-1.0*rPos)+(5.0e-5*(rAccpost^2.0))+(-0.0050000004*rAccpost)+(0.005*(rVel^2.0))+(0.0009999999*rAccpost*rVel))<0.0&((0.5*(rVel^2.0))+(-1.0*rAccpost*rPos))<0.0)))|(((-0.1*rVel)+(-1.0*rPos)+(0.005*(rVel^2.0)))<0.0&(1.0*x3<=0//1&-1.0*x3<=0//1)))), Set(SNNT.AST.Variable[rAccpost, rVel, rPos]), 2, 1)")
[ Info: ("[OUT]", "[CTRL] Iterating over conjunctions...")
[ Info: ("[OUT]", "[CTRL] Considering conjunction with 2 input constraints and a disjunction of size 5")
[ Info: ("[OUT]", "[APPROX] Checking cache: SNNT.Approx.ApproxCacheObject[]")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rVel^2.0)), [(-200.0, 0.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rVel^2.0)), [(-200.0, 0.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost^2.0)), [(-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost^2.0)), [(-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rPos)), [(0.0, 100.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Constructing Approximation")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rVel^2.0)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rAccpost^2.0)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rAccpost*rVel)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rAccpost*rPos)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Resolving approximation")
[ Info: ("[OUT]", "[APPROX] Skipping verification of approximation (switch on using SNNT.Config.set_rigorous_approximations(true))")
[ Info: ("[OUT]", "[APPROX] Skipping verification of approximation (switch on using SNNT.Config.set_rigorous_approximations(true))")
[ Info: ("[OUT]", "[APPROX] Skipping verification of approximation (switch on using SNNT.Config.set_rigorous_approximations(true))")
[ Info: ("[OUT]", "[APPROX] Skipping verification of approximation (switch on using SNNT.Config.set_rigorous_approximations(true))")
[ Info: ("[OUT]", "[APPROX] Skipping verification of approximation (switch on using SNNT.Config.set_rigorous_approximations(true))")
[ Info: ("[OUT]", "[APPROX] Skipping verification of approximation (switch on using SNNT.Config.set_rigorous_approximations(true))")
[ Info: ("[OUT]", "[APPROX] Skipping verification of approximation (switch on using SNNT.Config.set_rigorous_approximations(true))")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 180")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, -200.0]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, -99.999]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  180")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "(0.1 sec) Q: 0, Sets: 0/1  (0.0%) CEs: 0 ETA: - (expected 1 stars)   ")
[ Info: ("[OUT]", "(0.2 sec) Q: 0, Sets: 1/3  (25.0%) CEs: 2 ETA: 0.5 sec (expected 4 stars)   ")
[ Info: ("[OUT]", "(0.3 sec) Q: 0, Sets: 6/8  (43.75%) CEs: 7 ETA: 0.3 sec (expected 14 stars)   \r(0.4 sec) Q: 0, Sets: 8/10  (75.0%) CEs: 9 ETA: 0.1 sec (expected 11 stars)   ")
[ Info: ("[OUT]", "(0.5 sec) Q: 0, Sets: 12/14  (90.625%) CEs: 12 ETA: 0.1 sec (expected 13 stars)   ")
[ Info: ("[OUT]", "Total Stars: 14 (14 exact, 0 approx)")
[ Info: ("[OUT]", "Unfinished Stars: 0")
[ Info: ("[OUT]", "Runtime: 0.6 sec")
[ Info: ("[OUT]", "Completed work frac: 1.0")
[ Info: ("[OUT]", "Num Stars Copied Between Processes: 0")
[ Info: ("[OUT]", "Num Lps During Enumeration: 196")
[ Info: ("[OUT]", "Total Num Lps: 196")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "Result: network is UNSAFE with confirmed counterexample in result.cinput and result.coutput")
[ Info: ("[OUT]", "Input: [0.0, -99.9990005493164]")
[ Info: ("[OUT]", "Output: [49.1767578125]")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f90f6f00bb0>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "unsafe")
[ Info: ("[OUT]", "[NNENUM] Found counter-example stars: 14")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] Filter took 0.025547675 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005814941 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006322798 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006287132 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005364421 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005113954 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.019899655000000002 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012620072 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.016095315 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.018324024 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.019012528 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.016757663 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025447515 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.021597895 seconds (full).")
[ Info: ("[OUT]", "[SMT] SMT filtered out 7 stars (out of 14).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 60")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, -100.001]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, 0.0]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  60")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "(0.0 sec) Q: 0, Sets: 0/1  (0.0%) CEs: 0 ETA: - (expected 1 stars)   ")
[ Info: ("[OUT]", "(0.1 sec) Q: 0, Sets: 1/12  (0.049%) CEs: 3 ETA: 4.84 min (expected 2048 stars)   ")
[ Info: ("[OUT]", "(0.3 sec) Q: 0, Sets: 6/17  (0.22%) CEs: 7 ETA: 1.92 min (expected 2731 stars)   \r(0.4 sec) Q: 0, Sets: 11/22  (0.305%) CEs: 11 ETA: 1.95 min (expected 3604 stars)   ")
[ Info: ("[OUT]", "(0.5 sec) Q: 0, Sets: 15/24  (0.366%) CEs: 15 ETA: 2.1 min (expected 4096 stars)   \r(0.6 sec) Q: 0, Sets: 19/29  (0.83%) CEs: 19 ETA: 1.14 min (expected 2289 stars)   \r(0.7 sec) Q: 0, Sets: 22/32  (0.903%) CEs: 24 ETA: 1.26 min (expected 2435 stars)   \r(0.8 sec) Q: 0, Sets: 27/37  (1.001%) CEs: 28 ETA: 1.31 min (expected 2697 stars)   ")
[ Info: ("[OUT]", "(0.9 sec) Q: 0, Sets: 31/40  (1.05%) CEs: 31 ETA: 1.41 min (expected 2953 stars)   \r(1.0 sec) Q: 0, Sets: 35/44  (1.068%) CEs: 36 ETA: 1.58 min (expected 3277 stars)   \r(1.1 sec) Q: 0, Sets: 39/48  (1.123%) CEs: 40 ETA: 1.65 min (expected 3473 stars)   \r(1.2 sec) Q: 0, Sets: 43/52  (1.221%) CEs: 43 ETA: 1.66 min (expected 3523 stars)   \r(1.3 sec) Q: 0, Sets: 45/55  (1.282%) CEs: 47 ETA: 1.72 min (expected 3511 stars)   \r(1.5 sec) Q: 0, Sets: 50/59  (1.349%) CEs: 52 ETA: 1.79 min (expected 3707 stars)   \r(1.6 sec) Q: 0, Sets: 55/60  (3.125%) CEs: 56 ETA: 49.4 sec (expected 1760 stars)   \r(1.7 sec) Q: 0, Sets: 59/65  (3.906%) CEs: 59 ETA: 42.2 sec (expected 1510 stars)   ")
[ Info: ("[OUT]", "(1.8 sec) Q: 0, Sets: 63/68  (4.688%) CEs: 63 ETA: 37.1 sec (expected 1344 stars)   \r(1.9 sec) Q: 0, Sets: 67/74  (4.98%) CEs: 67 ETA: 36.9 sec (expected 1345 stars)   \r(2.0 sec) Q: 0, Sets: 72/78  (5.371%) CEs: 72 ETA: 36.1 sec (expected 1341 stars)   \r(2.2 sec) Q: 0, Sets: 77/83  (5.957%) CEs: 77 ETA: 34.1 sec (expected 1293 stars)   \r(2.3 sec) Q: 0, Sets: 82/89  (6.165%) CEs: 82 ETA: 34.8 sec (expected 1330 stars)   \r(2.4 sec) Q: 0, Sets: 87/93  (7.031%) CEs: 87 ETA: 31.6 sec (expected 1237 stars)   \r(2.5 sec) Q: 0, Sets: 90/95  (8.984%) CEs: 92 ETA: 25.3 sec (expected 1002 stars)   \r(2.6 sec) Q: 0, Sets: 95/100  (14.844%) CEs: 96 ETA: 14.9 sec (expected 640 stars)   \r(2.7 sec) Q: 0, Sets: 100/104  (20.312%) CEs: 100 ETA: 10.6 sec (expected 492 stars)   \r(2.8 sec) Q: 0, Sets: 105/108  (24.219%) CEs: 105 ETA: 8.8 sec (expected 434 stars)   \r(2.9 sec) Q: 0, Sets: 109/115  (26.367%) CEs: 109 ETA: 8.2 sec (expected 413 stars)   \r(3.0 sec) Q: 0, Sets: 112/117  (27.734%) CEs: 114 ETA: 7.9 sec (expected 404 stars)   \r(3.1 sec) Q: 0, Sets: 117/122  (32.031%) CEs: 118 ETA: 6.7 sec (expected 365 stars)   \r(3.3 sec) Q: 0, Sets: 122/126  (35.156%) CEs: 123 ETA: 6.0 sec (expected 347 stars)   \r(3.4 sec) Q: 0, Sets: 127/129  (50.0%) CEs: 127 ETA: 3.4 sec (expected 254 stars)   \r(3.5 sec) Q: 0, Sets: 130/134  (53.125%) CEs: 131 ETA: 3.1 sec (expected 245 stars)   ")
[ Info: ("[OUT]", "(3.6 sec) Q: 0, Sets: 135/140  (54.297%) CEs: 136 ETA: 3.0 sec (expected 249 stars)   \r(3.7 sec) Q: 0, Sets: 141/144  (56.25%) CEs: 141 ETA: 2.9 sec (expected 251 stars)   \r(3.8 sec) Q: 0, Sets: 143/148  (57.031%) CEs: 144 ETA: 2.9 sec (expected 251 stars)   \r(3.9 sec) Q: 0, Sets: 146/151  (57.422%) CEs: 147 ETA: 2.9 sec (expected 254 stars)   \r(4.0 sec) Q: 0, Sets: 150/154  (57.812%) CEs: 150 ETA: 3.0 sec (expected 259 stars)   \r(4.2 sec) Q: 0, Sets: 153/159  (58.105%) CEs: 153 ETA: 3.0 sec (expected 263 stars)   \r(4.3 sec) Q: 0, Sets: 155/160  (58.398%) CEs: 156 ETA: 3.1 sec (expected 265 stars)   \r(4.4 sec) Q: 0, Sets: 159/162  (59.375%) CEs: 159 ETA: 3.0 sec (expected 268 stars)   \r(4.5 sec) Q: 0, Sets: 162/166  (60.156%) CEs: 162 ETA: 3.0 sec (expected 269 stars)   \r(4.7 sec) Q: 0, Sets: 164/168  (60.547%) CEs: 165 ETA: 3.0 sec (expected 271 stars)   \r(4.8 sec) Q: 0, Sets: 168/170  (62.5%) CEs: 168 ETA: 2.9 sec (expected 269 stars)   \r(4.9 sec) Q: 0, Sets: 172/177  (63.867%) CEs: 173 ETA: 2.8 sec (expected 269 stars)   \r(5.0 sec) Q: 0, Sets: 176/184  (64.209%) CEs: 177 ETA: 2.8 sec (expected 274 stars)   \r(5.1 sec) Q: 0, Sets: 179/185  (64.355%) CEs: 181 ETA: 2.8 sec (expected 278 stars)   \r(5.2 sec) Q: 0, Sets: 184/188  (65.625%) CEs: 185 ETA: 2.7 sec (expected 280 stars)   \r(5.3 sec) Q: 0, Sets: 188/194  (66.016%) CEs: 189 ETA: 2.7 sec (expected 285 stars)   \r(5.4 sec) Q: 0, Sets: 193/196  (67.188%) CEs: 193 ETA: 2.6 sec (expected 287 stars)   \r(5.5 sec) Q: 0, Sets: 195/199  (67.578%) CEs: 197 ETA: 2.6 sec (expected 289 stars)   \r(5.6 sec) Q: 0, Sets: 200/204  (69.531%) CEs: 201 ETA: 2.5 sec (expected 288 stars)   \r(5.7 sec) Q: 0, Sets: 204/207  (73.047%) CEs: 205 ETA: 2.1 sec (expected 279 stars)   \r(5.8 sec) Q: 0, Sets: 208/210  (87.5%) CEs: 209 ETA: 0.8 sec (expected 238 stars)   ")
[ Info: ("[OUT]", "Total Stars: 210 (210 exact, 0 approx)")
[ Info: ("[OUT]", "Unfinished Stars: 0")
[ Info: ("[OUT]", "Runtime: 5.9 sec")
[ Info: ("[OUT]", "Completed work frac: 1.0")
[ Info: ("[OUT]", "Num Stars Copied Between Processes: 0")
[ Info: ("[OUT]", "Num Lps During Enumeration: 2917")
[ Info: ("[OUT]", "Total Num Lps: 2917")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "Result: network is UNSAFE with confirmed counterexample in result.cinput and result.coutput")
[ Info: ("[OUT]", "Input: [0.0, 0.0]")
[ Info: ("[OUT]", "Output: [2.7605559825897217]")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f9104e46eb0>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "unsafe")
[ Info: ("[OUT]", "[NNENUM] Found counter-example stars: 210")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] Filter took 0.022146713 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012507101 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008028837 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006160802 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.036770148 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.050102264 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.014576324 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.033348795 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.034345137 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.039506483999999994 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.037651853 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.027183045 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029854517 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.039428954 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.03646931 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.028652168999999998 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011394877 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.017255164 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007425424 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010110032 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010848092 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008668966 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007761439 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005884314 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010853128 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.014670209 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.060420721 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.040048308 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011206849 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.03591442 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.04881940900000001 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.05507237200000001 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.081958015 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.044799707 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.052481843 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.06062348100000001 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.030803771 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012940033 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.024539881 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010563397 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.043258685 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.021929689 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011103742 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005895435 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01290585 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011241453 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.014981839 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009645082 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010971422 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01248765 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.044118534 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.0332003 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025253725999999997 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00737557 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007261767 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006406795 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009440354 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00986289 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.032715055 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008582649 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008667864 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009002517 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029867622 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009337934 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006283753 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008183881 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009762191 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007550199 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010256939 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007192596 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007544251 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005468347 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.013701479 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010013994 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005151185 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007854568 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008286207 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011402964 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012573402 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029954189 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009328646 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011810769 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010211526 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009508985 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.04055998 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007469945 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006051504 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006061497 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009077362 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.035622564999999995 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.017509362 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009128762 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005874779 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007219753 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011064072 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.022425266 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01034112 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006599929 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007186643 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006810176 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029439645 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.023469244 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007810396 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.035518137 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.02585926 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00674113 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007736614 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006693113 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01373868 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012742057 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011961002 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011506412 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010920577 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012231318 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009376562 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007461534 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006131806 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.040446401 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025667091 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007113638 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012706785 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.026644834 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.033066885 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011668305 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006672112 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006460344 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006621928 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010736727 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011021708 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.031402214 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.0079729 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006867605 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007191344 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008921627 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.033500978 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.028515114 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.023814656 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.038928607000000004 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.031317227 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.026869602 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025336514999999997 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.024716082 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.018716297 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011331621 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.035184925 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.022557439 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011061408 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.016292797 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.016918077 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011985457 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010786386 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025080256000000002 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.014050391 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.042191160000000005 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.020553962 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012035962 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.021047467 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.034554771 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.015305502 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.024192466 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.03200765 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011411197 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.027513913 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.027345861 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.017125889 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012570674 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029877436 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.039250906 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008517592 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009317018 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.0180739 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01376209 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012575043 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.028522078 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.035035381000000004 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.021936564 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.030717319 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.046965861 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010421781 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012027177 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01026941 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011466251 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007786281 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009852007 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.031964837 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.027614239000000002 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.035692844 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.033577034 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.027501645999999998 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.031120639 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.037050665999999996 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.034925291 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009314184 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005886624 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.026678662 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01165415 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.038666114 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025084804000000002 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.020073778 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006434736 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029639001999999998 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00601166 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007420286 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.036039254 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.021448827 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.02090575 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.024895118 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006968786 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009446484 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006337645 seconds (pre).")
[ Info: ("[OUT]", "[SMT] SMT filtered out 135 stars (out of 210).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "[CTRL] Considering conjunction with 2 input constraints and a disjunction of size 1")
[ Info: ("[OUT]", "[APPROX] Checking cache: SNNT.Approx.ApproxCacheObject[SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rVel^2.0)), [(-200.0, 0.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost^2.0)), [(-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost^2.0)), [(-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rPos)), [(0.0, 100.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rVel^2.0)), [(-200.0, 0.0)])]")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rVel^2.0)), [(-200.0, 0.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rVel^2.0)), [(-200.0, 0.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost^2.0)), [(-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rPos)), [(0.0, 100.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Constructing Approximation")
[ Info: ("[OUT]", "[APPROX] Resolving approximation")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 36")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, -200.0]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, -99.999]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  36")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f90f6f007c0>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "safe")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] SMT filtered out 0 stars (out of 0).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 12")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, -100.001]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, 0.0]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  12")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "(0.0 sec) Q: 0, Sets: 0/1  (0.0%) CEs: 0 ETA: - (expected 1 stars)   ")
[ Info: ("[OUT]", "(0.1 sec) Q: 0, Sets: 6/8  (43.75%) CEs: 0 ETA: 0.2 sec (expected 14 stars)   ")
[ Info: ("[OUT]", "(0.2 sec) Q: 0, Sets: 10/17  (75.195%) CEs: 0 ETA: 0.1 sec (expected 13 stars)   \r(0.3 sec) Q: 0, Sets: 18/25  (75.928%) CEs: 0 ETA: 0.1 sec (expected 24 stars)   ")
[ Info: ("[OUT]", "(0.5 sec) Q: 0, Sets: 25/34  (78.149%) CEs: 0 ETA: 0.1 sec (expected 32 stars)   \r(0.6 sec) Q: 0, Sets: 27/34  (78.223%) CEs: 0 ETA: 0.2 sec (expected 35 stars)   ")
[ Info: ("[OUT]", "Total Stars: 34 (3 exact, 31 approx)")
[ Info: ("[OUT]", "Unfinished Stars: 0")
[ Info: ("[OUT]", "Runtime: 0.6 sec")
[ Info: ("[OUT]", "Completed work frac: 1.0")
[ Info: ("[OUT]", "Num Stars Copied Between Processes: 0")
[ Info: ("[OUT]", "Num Lps During Enumeration: 22")
[ Info: ("[OUT]", "Total Num Lps: 22")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "Result: network is SAFE")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f9102bce4c0>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "safe")
[ Info: ("[OUT]", "[NNENUM] Found counter-example stars: 0")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] SMT filtered out 0 stars (out of 0).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "[CTRL] Considering conjunction with 2 input constraints and a disjunction of size 1")
[ Info: ("[OUT]", "[APPROX] Checking cache: SNNT.Approx.ApproxCacheObject[SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rVel^2.0)), [(-200.0, 0.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost^2.0)), [(-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost^2.0)), [(-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rPos)), [(0.0, 100.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rVel^2.0)), [(-200.0, 0.0)])]")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rVel^2.0)), [(0.0, 200.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rVel^2.0)), [(0.0, 200.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost^2.0)), [(-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost*rVel)), [(0.0, 200.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rPos)), [(0.0, 100.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Constructing Approximation")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rVel^2.0)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rAccpost*rVel)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Resolving approximation")
[ Info: ("[OUT]", "[APPROX] Skipping verification of approximation (switch on using SNNT.Config.set_rigorous_approximations(true))")
[ Info: ("[OUT]", "[APPROX] Skipping verification of approximation (switch on using SNNT.Config.set_rigorous_approximations(true))")
[ Info: ("[OUT]", "[APPROX] Skipping verification of approximation (switch on using SNNT.Config.set_rigorous_approximations(true))")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 36")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, 0.0]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, 100.001]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  36")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "(0.0 sec) Q: 0, Sets: 0/1  (0.0%) CEs: 0 ETA: - (expected 1 stars)   ")
[ Info: ("[OUT]", "(0.1 sec) Q: 0, Sets: 5/9  (10.938%) CEs: 0 ETA: 1.1 sec (expected 46 stars)   ")
[ Info: ("[OUT]", "(0.3 sec) Q: 0, Sets: 12/17  (39.453%) CEs: 0 ETA: 0.4 sec (expected 30 stars)   \r(0.6 sec) Q: 0, Sets: 17/17  (100.0%) CEs: 0 ETA: 0.0 sec (expected 17 stars)   ")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "Total Stars: 17 (0 exact, 17 approx)")
[ Info: ("[OUT]", "Unfinished Stars: 0")
[ Info: ("[OUT]", "Runtime: 0.6 sec")
[ Info: ("[OUT]", "Completed work frac: 1.0")
[ Info: ("[OUT]", "Num Stars Copied Between Processes: 0")
[ Info: ("[OUT]", "Num Lps During Enumeration: 0")
[ Info: ("[OUT]", "Total Num Lps: 0")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "Result: network is SAFE")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f9102bce7c0>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "safe")
[ Info: ("[OUT]", "[NNENUM] Found counter-example stars: 0")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] SMT filtered out 0 stars (out of 0).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 12")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, 99.999]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, 200.0]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  12")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f9102bc8a60>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "safe")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] SMT filtered out 0 stars (out of 0).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "131.937155 seconds (198.48 M allocations: 10.920 GiB, 7.01% gc time, 80.53% compilation time)")
[ Info: ("[OUT]", "166.759567 seconds (223.70 M allocations: 12.279 GiB, 6.51% gc time, 83.81% compilation time)")
[ Info: ("[OUT]", "----------------------------------------------------------")
[ Info: ("[OUT]", "Status: Unsafe")
[ Info: ("[OUT]", "# Unsafe Stars: 82")
[ Info: ("[OUT]", "Saving result in /tmp/results.jld... Done")
[ Info: ("[OUT]", "[CMD] Running in rigorous mode")
[ Info: ("[OUT]", "[CMD] Using SMT solver: Z3")
[ Info: ("[OUT]", "[CMD] Parsed initial query: SNNT.AST.Query((((-1.0*x1<=0//1&1.0*x1<=100//1&-1.0*x2<=200//1&1.0*x2<=200//1&-1.0*x3<=100//1&1.0*x3<=100//1)&(-1.0*x1<0//1&((-1.0*rPos)+(0.005*(rVel^2.0)))<=0.0))->((1.0*x3<=100//1&-1.0*x3<=-100//1)|(-1.0*x3<=100//1&1.0*x3<100//1&(1.0*x3<0//1|-1.0*x3<0//1)&(((1.0*x20.1*x3<0//1|-1.0*x2<0//1)&((-0.1*rVel)+(-1.0*rPos)+(5.0e-5*(rAccpost^2.0))+(-0.0050000004*rAccpost)+(0.005*(rVel^2.0))+(0.0009999999*rAccpost*rVel))<0.0)|(((-0.1*rVel)+(-1.0*rPos)+(5.0e-5*(rAccpost^2.0))+(-0.0050000004*rAccpost)+(0.005*(rVel^2.0))+(0.0009999999*rAccpost*rVel))<0.0&((0.5*(rVel^2.0))+(-1.0*rAccpost*rPos))<0.0)))|(((-0.1*rVel)+(-1.0*rPos)+(0.005*(rVel^2.0)))<0.0&(1.0*x3<=0//1&-1.0*x3<=0//1)))), Set(SNNT.AST.Variable[rAccpost, rVel, rPos]), 2, 1)")
[ Info: ("[OUT]", "[CTRL] Iterating over conjunctions...")
[ Info: ("[OUT]", "[CTRL] Considering conjunction with 2 input constraints and a disjunction of size 5")
[ Info: ("[OUT]", "[APPROX] Checking cache: SNNT.Approx.ApproxCacheObject[]")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rVel^2.0)), [(-200.0, 0.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rVel^2.0)), [(-200.0, 0.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost^2.0)), [(-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost^2.0)), [(-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rPos)), [(0.0, 100.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Constructing Approximation")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rVel^2.0)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rAccpost^2.0)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rAccpost*rVel)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rAccpost*rPos)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Resolving approximation")
[ Info: ("[OUT]", "[APPROX] Verifying correctness of approximation for term (rVel^2.0)")
[ Info: ("[OUT]", "[APPROX] Verifying correctness of approximation for term (rAccpost^2.0)")
[ Info: ("[OUT]", "[APPROX] Verifying correctness of approximation for term (rAccpost*rVel)")
[ Info: ("[OUT]", "[APPROX] Verifying correctness of approximation for term (rAccpost^2.0)")
[ Info: ("[OUT]", "[APPROX] Verifying correctness of approximation for term (rAccpost*rVel)")
[ Info: ("[OUT]", "[APPROX] Verifying correctness of approximation for term (rAccpost*rPos)")
[ Info: ("[OUT]", "[APPROX] Verifying correctness of approximation for term (rVel^2.0)")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 180")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, -200.0]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, -99.999]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  180")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "(0.0 sec) Q: 0, Sets: 0/1  (0.0%) CEs: 0 ETA: - (expected 1 stars)   ")
[ Info: ("[OUT]", "(0.1 sec) Q: 0, Sets: 4/7  (34.375%) CEs: 4 ETA: 0.3 sec (expected 12 stars)   ")
[ Info: ("[OUT]", "(0.2 sec) Q: 0, Sets: 7/9  (50.0%) CEs: 8 ETA: 0.2 sec (expected 14 stars)   \r(0.3 sec) Q: 0, Sets: 10/12  (87.5%) CEs: 10 ETA: 0.0 sec (expected 11 stars)   ")
[ Info: ("[OUT]", "(0.5 sec) Q: 0, Sets: 11/14  (89.062%) CEs: 13 ETA: 0.1 sec (expected 12 stars)   ")
[ Info: ("[OUT]", "Total Stars: 14 (14 exact, 0 approx)")
[ Info: ("[OUT]", "Unfinished Stars: 0")
[ Info: ("[OUT]", "Runtime: 0.5 sec")
[ Info: ("[OUT]", "Completed work frac: 1.0")
[ Info: ("[OUT]", "Num Stars Copied Between Processes: 0")
[ Info: ("[OUT]", "Num Lps During Enumeration: 196")
[ Info: ("[OUT]", "Total Num Lps: 196")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "Result: network is UNSAFE with confirmed counterexample in result.cinput and result.coutput")
[ Info: ("[OUT]", "Input: [0.0, -99.9990005493164]")
[ Info: ("[OUT]", "Output: [49.1767578125]")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f9102be15b0>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "unsafe")
[ Info: ("[OUT]", "[NNENUM] Found counter-example stars: 14")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] Filter took 0.016894783 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.004608711 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006730815 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006472102 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005610932 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00505061 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.016431115 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011518897 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.015918068 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.017303818999999998 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.019201891 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.016048127 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.023027467 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.021211656 seconds (full).")
[ Info: ("[OUT]", "[SMT] SMT filtered out 7 stars (out of 14).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 60")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, -100.001]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, 0.0]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  60")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "(0.0 sec) Q: 0, Sets: 0/1  (0.0%) CEs: 0 ETA: - (expected 1 stars)   ")
[ Info: ("[OUT]", "(0.1 sec) Q: 0, Sets: 1/12  (0.049%) CEs: 3 ETA: 4.52 min (expected 2048 stars)   ")
[ Info: ("[OUT]", "(0.2 sec) Q: 0, Sets: 6/17  (0.22%) CEs: 7 ETA: 1.79 min (expected 2731 stars)   \r(0.4 sec) Q: 0, Sets: 12/22  (0.317%) CEs: 12 ETA: 1.88 min (expected 3781 stars)   ")
[ Info: ("[OUT]", "(0.5 sec) Q: 0, Sets: 16/24  (0.391%) CEs: 16 ETA: 2.0 min (expected 4096 stars)   \r(0.6 sec) Q: 0, Sets: 20/29  (0.879%) CEs: 20 ETA: 1.08 min (expected 2276 stars)   \r(0.7 sec) Q: 0, Sets: 22/32  (0.903%) CEs: 24 ETA: 1.24 min (expected 2435 stars)   \r(0.8 sec) Q: 0, Sets: 28/37  (1.025%) CEs: 28 ETA: 1.27 min (expected 2731 stars)   ")
[ Info: ("[OUT]", "(0.9 sec) Q: 0, Sets: 32/43  (1.053%) CEs: 32 ETA: 1.4 min (expected 3039 stars)   \r(1.0 sec) Q: 0, Sets: 35/44  (1.068%) CEs: 37 ETA: 1.56 min (expected 3277 stars)   \r(1.1 sec) Q: 0, Sets: 40/48  (1.147%) CEs: 41 ETA: 1.6 min (expected 3486 stars)   \r(1.2 sec) Q: 0, Sets: 44/54  (1.27%) CEs: 46 ETA: 1.6 min (expected 3466 stars)   \r(1.3 sec) Q: 0, Sets: 49/57  (1.343%) CEs: 50 ETA: 1.63 min (expected 3649 stars)   \r(1.5 sec) Q: 0, Sets: 54/60  (2.344%) CEs: 55 ETA: 1.01 min (expected 2304 stars)   \r(1.6 sec) Q: 0, Sets: 59/65  (3.906%) CEs: 59 ETA: 38.5 sec (expected 1510 stars)   \r(1.7 sec) Q: 0, Sets: 62/68  (4.297%) CEs: 63 ETA: 37.2 sec (expected 1443 stars)   ")
[ Info: ("[OUT]", "(1.8 sec) Q: 0, Sets: 66/74  (4.932%) CEs: 67 ETA: 34.2 sec (expected 1338 stars)   \r(1.9 sec) Q: 0, Sets: 72/78  (5.371%) CEs: 72 ETA: 33.2 sec (expected 1341 stars)   \r(2.0 sec) Q: 0, Sets: 77/83  (5.957%) CEs: 77 ETA: 31.6 sec (expected 1293 stars)   \r(2.1 sec) Q: 0, Sets: 82/89  (6.165%) CEs: 82 ETA: 32.3 sec (expected 1330 stars)   \r(2.2 sec) Q: 0, Sets: 87/93  (7.031%) CEs: 87 ETA: 29.5 sec (expected 1237 stars)   \r(2.4 sec) Q: 0, Sets: 90/95  (8.984%) CEs: 92 ETA: 23.8 sec (expected 1002 stars)   \r(2.5 sec) Q: 0, Sets: 95/100  (14.844%) CEs: 96 ETA: 14.1 sec (expected 640 stars)   \r(2.6 sec) Q: 0, Sets: 99/103  (18.75%) CEs: 100 ETA: 11.1 sec (expected 528 stars)   \r(2.7 sec) Q: 0, Sets: 103/107  (22.656%) CEs: 105 ETA: 9.1 sec (expected 455 stars)   \r(2.8 sec) Q: 0, Sets: 108/114  (26.172%) CEs: 109 ETA: 7.9 sec (expected 413 stars)   \r(2.9 sec) Q: 0, Sets: 112/117  (27.734%) CEs: 113 ETA: 7.6 sec (expected 404 stars)   \r(3.0 sec) Q: 0, Sets: 116/122  (31.641%) CEs: 117 ETA: 6.5 sec (expected 367 stars)   \r(3.1 sec) Q: 0, Sets: 119/123  (32.812%) CEs: 121 ETA: 6.4 sec (expected 363 stars)   \r(3.2 sec) Q: 0, Sets: 124/126  (37.5%) CEs: 125 ETA: 5.4 sec (expected 331 stars)   \r(3.3 sec) Q: 0, Sets: 129/134  (52.344%) CEs: 130 ETA: 3.0 sec (expected 246 stars)   \r(3.4 sec) Q: 0, Sets: 134/139  (53.906%) CEs: 134 ETA: 2.9 sec (expected 249 stars)   ")
[ Info: ("[OUT]", "(3.5 sec) Q: 0, Sets: 137/142  (54.59%) CEs: 139 ETA: 3.0 sec (expected 251 stars)   \r(3.7 sec) Q: 0, Sets: 142/148  (56.641%) CEs: 143 ETA: 2.8 sec (expected 251 stars)   \r(3.8 sec) Q: 0, Sets: 146/151  (57.422%) CEs: 146 ETA: 2.8 sec (expected 254 stars)   \r(3.9 sec) Q: 0, Sets: 148/153  (57.715%) CEs: 149 ETA: 2.9 sec (expected 256 stars)   \r(4.0 sec) Q: 0, Sets: 152/158  (58.008%) CEs: 152 ETA: 2.9 sec (expected 262 stars)   \r(4.2 sec) Q: 0, Sets: 154/159  (58.203%) CEs: 155 ETA: 3.0 sec (expected 265 stars)   \r(4.3 sec) Q: 0, Sets: 158/162  (58.984%) CEs: 158 ETA: 3.0 sec (expected 268 stars)   \r(4.4 sec) Q: 0, Sets: 160/166  (59.57%) CEs: 160 ETA: 3.0 sec (expected 269 stars)   \r(4.5 sec) Q: 0, Sets: 162/166  (60.156%) CEs: 163 ETA: 3.0 sec (expected 269 stars)   \r(4.6 sec) Q: 0, Sets: 167/170  (61.719%) CEs: 168 ETA: 2.8 sec (expected 271 stars)   \r(4.7 sec) Q: 0, Sets: 172/177  (63.867%) CEs: 172 ETA: 2.7 sec (expected 269 stars)   \r(4.8 sec) Q: 0, Sets: 176/183  (64.209%) CEs: 176 ETA: 2.7 sec (expected 274 stars)   \r(4.9 sec) Q: 0, Sets: 178/185  (64.258%) CEs: 180 ETA: 2.7 sec (expected 277 stars)   \r(5.0 sec) Q: 0, Sets: 183/187  (65.234%) CEs: 184 ETA: 2.7 sec (expected 281 stars)   \r(5.1 sec) Q: 0, Sets: 187/193  (65.967%) CEs: 188 ETA: 2.7 sec (expected 283 stars)   \r(5.3 sec) Q: 0, Sets: 192/196  (66.406%) CEs: 193 ETA: 2.7 sec (expected 289 stars)   \r(5.4 sec) Q: 0, Sets: 197/200  (67.969%) CEs: 197 ETA: 2.5 sec (expected 290 stars)   \r(5.5 sec) Q: 0, Sets: 201/204  (70.312%) CEs: 201 ETA: 2.3 sec (expected 286 stars)   \r(5.6 sec) Q: 0, Sets: 203/206  (72.656%) CEs: 205 ETA: 2.1 sec (expected 279 stars)   \r(5.7 sec) Q: 0, Sets: 208/210  (87.5%) CEs: 209 ETA: 0.8 sec (expected 238 stars)   ")
[ Info: ("[OUT]", "Total Stars: 210 (210 exact, 0 approx)")
[ Info: ("[OUT]", "Unfinished Stars: 0")
[ Info: ("[OUT]", "Runtime: 5.7 sec")
[ Info: ("[OUT]", "Completed work frac: 1.0")
[ Info: ("[OUT]", "Num Stars Copied Between Processes: 0")
[ Info: ("[OUT]", "Num Lps During Enumeration: 2917")
[ Info: ("[OUT]", "Total Num Lps: 2917")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "Result: network is UNSAFE with confirmed counterexample in result.cinput and result.coutput")
[ Info: ("[OUT]", "Input: [0.0, 0.0]")
[ Info: ("[OUT]", "Output: [2.7605559825897217]")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f9126417d90>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "unsafe")
[ Info: ("[OUT]", "[NNENUM] Found counter-example stars: 210")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] Filter took 0.011720209 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005986552 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007094869 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006293901 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.037371072000000005 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.054453903 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.015082628 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.034289871 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.036351457999999996 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.048083334 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.044199062 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.030004131 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.033017382 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.036834489 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.036898736 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.030824585 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011267366 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.016456336 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007485822 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011576915 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011456295 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008962233 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008287863 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007405212 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011701154 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.014301563 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01597439 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.039740318000000004 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010971606 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.038189861 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.053008879 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.052419475 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.052922727 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.039910298 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.034970832 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.041021207000000004 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029807463 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011914422 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025032403 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010661679 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.043114645 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.017309498 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010589002 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006606773 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.015175843 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.014130274 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01325612 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010805161 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.013367544 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.015459621 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.047806606 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.035750046 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.041778811 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009775955 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008965406 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006689495 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01802779 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.013605861 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025823291 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006658542 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00824843 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007862809 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029854762 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008932726 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006453898 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007463335 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009792 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007624068 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00967345 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007327184 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007335642 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005578112 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.014088577 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00830067 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005213695 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00774918 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007289287 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009483212 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01163123 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.02741509 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008625059 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010474687 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010198754 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008603783 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.038028292000000005 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00725391 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01011439 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007272608 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008681969 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.034708646999999995 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.013137274 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01088177 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006169608 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007327624 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010598947 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.021870879 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009254926 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007241974 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008802418 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007229748 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.031276601 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025593673 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008219307 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.031953841 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.028693269 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007706484 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008646139 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00844635 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.014003401 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011736857 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01080603 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009633106 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010444855 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009977303 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009534543 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007068152 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005592391 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.03666019 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.030718608 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009661906 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.01435591 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.028557937 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.036272184 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012086129 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008912363 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010661336 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011293046 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009359607 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.053439301 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029098961 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.00796899 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006464646 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006676703 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009695258 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.034847059 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.030161308 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.023884296 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.039409995 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029773221 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025356063999999998 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025566020999999998 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.02032337 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.046355249 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012326376 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.035364185000000006 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.023042616000000002 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010665958 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.016237321 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.046382743 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.013707059 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009711197 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.028462941999999998 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011992587 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.040004371999999996 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.015898549 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011453688 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.024210457999999997 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.041053310999999995 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.014958324 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.026343635 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.0352093 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012323181 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.027416712 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.02572891 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.015798093 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011796505 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.029884494999999997 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.042002574 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009594032 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009017535 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.009313475 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.011819019 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.012605883 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.027475036 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.033905854 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.020710007 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025587116 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.049346893 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008449917 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010886467 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008442753 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008772723 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.007576762 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.010539512 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.038345453 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.038748624999999995 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.055023002 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.047968984 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.024306813 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.027851970000000004 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.034164263 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.033415368 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008615204 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005900297 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.028948565 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008360205 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.037407883 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.028126601 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.019432078 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.005869876 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.033215196 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006444097 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.020116615 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.034276886 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.022149861 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.022154237 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.025288034 seconds (full).")
[ Info: ("[OUT]", "[SMT] Filter took 0.004683069 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.008999977 seconds (pre).")
[ Info: ("[OUT]", "[SMT] Filter took 0.006276493 seconds (pre).")
[ Info: ("[OUT]", "[SMT] SMT filtered out 135 stars (out of 210).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "[CTRL] Considering conjunction with 2 input constraints and a disjunction of size 1")
[ Info: ("[OUT]", "[APPROX] Checking cache: SNNT.Approx.ApproxCacheObject[SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rVel^2.0)), [(-200.0, 0.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost^2.0)), [(-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost^2.0)), [(-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rPos)), [(0.0, 100.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rVel^2.0)), [(-200.0, 0.0)])]")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rVel^2.0)), [(-200.0, 0.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rVel^2.0)), [(-200.0, 0.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost^2.0)), [(-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rPos)), [(0.0, 100.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Constructing Approximation")
[ Info: ("[OUT]", "[APPROX] Resolving approximation")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 36")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, -200.0]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, -99.999]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  36")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f9102bc8fd0>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "safe")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] SMT filtered out 0 stars (out of 0).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 12")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, -100.001]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, 0.0]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  12")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "(0.0 sec) Q: 0, Sets: 0/1  (0.0%) CEs: 0 ETA: - (expected 1 stars)   ")
[ Info: ("[OUT]", "(0.1 sec) Q: 0, Sets: 6/8  (43.75%) CEs: 0 ETA: 0.2 sec (expected 14 stars)   ")
[ Info: ("[OUT]", "(0.3 sec) Q: 0, Sets: 10/17  (75.195%) CEs: 0 ETA: 0.1 sec (expected 13 stars)   \r(0.4 sec) Q: 0, Sets: 18/25  (75.928%) CEs: 0 ETA: 0.1 sec (expected 24 stars)   ")
[ Info: ("[OUT]", "(0.5 sec) Q: 0, Sets: 25/34  (78.149%) CEs: 0 ETA: 0.1 sec (expected 32 stars)   \r(0.6 sec) Q: 0, Sets: 32/34  (81.25%) CEs: 0 ETA: 0.1 sec (expected 39 stars)   ")
[ Info: ("[OUT]", "Total Stars: 34 (3 exact, 31 approx)")
[ Info: ("[OUT]", "Unfinished Stars: 0")
[ Info: ("[OUT]", "Runtime: 0.6 sec")
[ Info: ("[OUT]", "Completed work frac: 1.0")
[ Info: ("[OUT]", "Num Stars Copied Between Processes: 0")
[ Info: ("[OUT]", "Num Lps During Enumeration: 22")
[ Info: ("[OUT]", "Total Num Lps: 22")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "Result: network is SAFE")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f9102bca130>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "safe")
[ Info: ("[OUT]", "[NNENUM] Found counter-example stars: 0")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] SMT filtered out 0 stars (out of 0).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "[CTRL] Considering conjunction with 2 input constraints and a disjunction of size 1")
[ Info: ("[OUT]", "[APPROX] Checking cache: SNNT.Approx.ApproxCacheObject[SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rVel^2.0)), [(-200.0, 0.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost^2.0)), [(-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost^2.0)), [(-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rPos)), [(0.0, 100.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost*rVel)), [(-200.0, 0.0), (-100.0, 100.0)]), SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rVel^2.0)), [(-200.0, 0.0)])]")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rVel^2.0)), [(0.0, 200.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rVel^2.0)), [(0.0, 200.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost^2.0)), [(-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Not found: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Upper, (rAccpost*rVel)), [(0.0, 200.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Reusing approximation for query: SNNT.Approx.ApproxCacheObject(SNNT.AST.ApproxQuery(SNNT.AST.Lower, (rAccpost*rPos)), [(0.0, 100.0), (-100.0, 100.0)])")
[ Info: ("[OUT]", "[APPROX] Constructing Approximation")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rVel^2.0)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Generating expression for (rAccpost*rVel)...")
[ Info: ("[OUT]", "Using N=1, 系=0.0")
[ Info: ("[OUT]", "[APPROX] Resolving approximation")
[ Info: ("[OUT]", "[APPROX] Verifying correctness of approximation for term (rVel^2.0)")
[ Info: ("[OUT]", "[APPROX] Verifying correctness of approximation for term (rAccpost*rVel)")
[ Info: ("[OUT]", "[APPROX] Verifying correctness of approximation for term (rVel^2.0)")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 36")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, 0.0]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, 100.001]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  36")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "(0.0 sec) Q: 0, Sets: 0/1  (0.0%) CEs: 0 ETA: - (expected 1 stars)   ")
[ Info: ("[OUT]", "(0.2 sec) Q: 0, Sets: 5/9  (10.938%) CEs: 0 ETA: 1.2 sec (expected 46 stars)   ")
[ Info: ("[OUT]", "(0.3 sec) Q: 0, Sets: 10/13  (37.5%) CEs: 0 ETA: 0.4 sec (expected 27 stars)   \r(0.4 sec) Q: 0, Sets: 15/17  (43.75%) CEs: 0 ETA: 0.5 sec (expected 34 stars)   ")
[ Info: ("[OUT]", "(0.6 sec) Q: 0, Sets: 17/17  (100.0%) CEs: 0 ETA: 0.0 sec (expected 17 stars)   ")
[ Info: ("[OUT]", "Total Stars: 17 (0 exact, 17 approx)")
[ Info: ("[OUT]", "Unfinished Stars: 0")
[ Info: ("[OUT]", "Runtime: 0.6 sec")
[ Info: ("[OUT]", "Completed work frac: 1.0")
[ Info: ("[OUT]", "Num Stars Copied Between Processes: 0")
[ Info: ("[OUT]", "Num Lps During Enumeration: 0")
[ Info: ("[OUT]", "Total Num Lps: 0")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "Result: network is SAFE")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f9102bca520>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "safe")
[ Info: ("[OUT]", "[NNENUM] Found counter-example stars: 0")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] SMT filtered out 0 stars (out of 0).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", "[APPROX] # Conjunctions over output: 12")
[ Info: ("[OUT]", "[NNENUM] Running nnenum now...")
[ Info: ("[OUT]", "[NNENUM] lb: [0.0, 99.999]")
[ Info: ("[OUT]", "[NNENUM] ub: [100.0, 200.0]")
[ Info: ("[OUT]", "[NNENUM] Spec list length:  12")
[ Info: ("[OUT]", "[NNENUM] Enumeration in progress... ")
[ Info: ("[OUT]", "")
[ Info: ("[OUT]", "[NNENUM] Result: ")
[ Info: ("[OUT]", "<nnenum.result.Result object at 0x7f9104e50250>")
[ Info: ("[OUT]", "[NNENUM] Enumeration finished.")
[ Info: ("[OUT]", "safe")
[ Info: ("[OUT]", "[NNENUM] Filtering result using SMT solver...")
[ Info: ("[OUT]", "[SMT] SMT filtered out 0 stars (out of 0).")
[ Info: ("[OUT]", "[CTRL] Saving current state of verification...")
[ Info: ("[OUT]", " 75.741582 seconds (73.03 M allocations: 3.735 GiB, 46.86% gc time, 25.82% compilation time)")
[ Info: ("[OUT]", " 76.683803 seconds (74.63 M allocations: 3.812 GiB, 47.18% gc time, 25.50% compilation time)")
[ Info: ("[OUT]", "----------------------------------------------------------")
[ Info: ("[OUT]", "Status: Unsafe")
[ Info: ("[OUT]", "# Unsafe Stars: 82")
[ Info: ("[OUT]", "Saving result in /tmp/results.jld... Done")
[ Info: ("[ERR] Proccess execution failed: ", ProcessFailedException(Base.Process[Process(setenv(`julia --startup-file=no --compile=all --trace-compile=/tmp/snnt_trace.jl /root/bench/SNNT/snnt/deps/sysimage/trace_run.jl`,["_CE_M=", "PATH=/root/miniconda3/bin:/root/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/root/gurobi/gurobi912/linux64/bin:/root/runlim/runlim-1.10:/root/gurobi/gurobi912/linux64/bin/:/root/runlim/runlim-1.10", "STY=13671.pts-0.teuber", "USER=root", "LC_TIME=de_DE.UTF-8", "LESSCLOSE=/usr/bin/lesspipe %s %s", "LC_NUMERIC=de_DE.UTF-8", "JULIA_DEPOT_PATH=/root/.julia:/opt/julia-1.7.2/local/share/julia:/opt/julia-1.7.2/share/julia", "LC_MEASUREMENT=de_DE.UTF-8", "CONDA_PROMPT_MODIFIER=(base) ", "LC_TELEPHONE=de_DE.UTF-8", "XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop", "LESSOPEN=| /usr/bin/lesspipe %s", "SHELL=/bin/bash", "WINDOW=0", "SSH_CLIENT=128.2.149.7 34944 22", "_CE_CONDA=", "CONDA_SHLVL=1", "SSH_TTY=/dev/pts/0", "CONDA_EXE=/root/miniconda3/bin/conda", "HOME=/root", "TERM=screen.xterm-256color", "CONDA_PYTHON_EXE=/root/miniconda3/bin/python", "LANG=en_US.UTF-8", "SHLVL=2", "LOGNAME=root", "LC_MONETARY=de_DE.UTF-8", "XDG_RUNTIME_DIR=/run/user/0", "OLDPWD=/root", "LC_PAPER=de_DE.UTF-8", "LC_ADDRESS=de_DE.UTF-8", "_=/usr/local/bin/julia", "CONDA_DEFAULT_ENV=base", "TERMCAP=SC|screen.xterm-256color|VT 100/ANSI X3.64 virtual terminal:\\\n\t:DO=\\E[%dB:LE=\\E[%dD:RI=\\E[%dC:UP=\\E[%dA:bs:bt=\\E[Z:\\\n\t:cd=\\E[J:ce=\\E[K:cl=\\E[H\\E[J:cm=\\E[%i%d;%dH:ct=\\E[3g:\\\n\t:do=^J:nd=\\E[C:pt:rc=\\E8:rs=\\Ec:sc=\\E7:st=\\EH:up=\\EM:\\\n\t:le=^H:bl=^G:cr=^M:it#8:ho=\\E[H:nw=\\EE:ta=^I:is=\\E)0:\\\n\t:li#38:co#190:am:xn:xv:LP:sr=\\EM:al=\\E[L:AL=\\E[%dL:\\\n\t:cs=\\E[%i%d;%dr:dl=\\E[M:DL=\\E[%dM:dc=\\E[P:DC=\\E[%dP:\\\n\t:im=\\E[4h:ei=\\E[4l:mi:IC=\\E[%d@:ks=\\E[?1h\\E=:\\\n\t:ke=\\E[?1l\\E>:vi=\\E[?25l:ve=\\E[34h\\E[?25h:vs=\\E[34l:\\\n\t:ti=\\E[?1049h:te=\\E[?1049l:us=\\E[4m:ue=\\E[24m:so=\\E[3m:\\\n\t:se=\\E[23m:mb=\\E[5m:md=\\E[1m:mh=\\E[2m:mr=\\E[7m:\\\n\t:me=\\E[m:ms:\\\n\t:Co#8:pa#64:AF=\\E[3%dm:AB=\\E[4%dm:op=\\E[39;49m:AX:\\\n\t:vb=\\Eg:G0:as=\\E(0:ae=\\E(B:\\\n\t:ac=\\140\\140aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~..--++,,hhII00:\\\n\t:po=\\E[5i:pf=\\E[4i:Km=\\E[M:k0=\\E[10~:k1=\\EOP:k2=\\EOQ:\\\n\t:k3=\\EOR:k4=\\EOS:k5=\\E[15~:k6=\\E[17~:k7=\\E[18~:\\\n\t:k8=\\E[19~:k9=\\E[20~:k;=\\E[21~:F1=\\E[23~:F2=\\E[24~:\\\n\t:F3=\\E[1;2P:F4=\\E[1;2Q:F5=\\E[1;2R:F6=\\E[1;2S:\\\n\t:F7=\\E[15;2~:F8=\\E[17;2~:F9=\\E[18;2~:FA=\\E[19;2~:\\\n\t:FB=\\E[20;2~:FC=\\E[21;2~:FD=\\E[23;2~:FE=\\E[24;2~:kb=\x7f:\\\n\t:K2=\\EOE:kB=\\E[Z:kF=\\E[1;2B:kR=\\E[1;2A:*4=\\E[3;2~:\\\n\t:*7=\\E[1;2F:#2=\\E[1;2H:#3=\\E[2;2~:#4=\\E[1;2D:%c=\\E[6;2~:\\\n\t:%e=\\E[5;2~:%i=\\E[1;2C:kh=\\E[1~:@1=\\E[1~:kH=\\E[4~:\\\n\t:@7=\\E[4~:kN=\\E[6~:kP=\\E[5~:kI=\\E[2~:kD=\\E[3~:ku=\\EOA:\\\n\t:kd=\\EOB:kr=\\EOC:kl=\\EOD:km:", "PWD=/root/bench/SNNT/snnt", "SSH_CONNECTION=128.2.149.7 34944 213.109.160.210 22", "OPENBLAS_NUM_THREADS=1", "OMP_NUM_THREADS=1", "MAIL=/var/mail/root", "CONDA_PREFIX=/root/miniconda3", "LC_NAME=de_DE.UTF-8", "XDG_SESSION_ID=79568", "LC_IDENTIFICATION=de_DE.UTF-8", "JULIA_LOAD_PATH=/root/.julia/environments/v1.7/Project.toml:/opt/julia-1.7.2/share/julia/stdlib/v1.7", "LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "OPENBLAS_MAIN_FREE=1"]), ProcessExited(1))]))
[ Info: ("[ERR]", "ERROR: LoadError: UndefVarError: prinln not defined\nStacktrace:\n [1] run_internal(args::Dict{String, Any})\n   @ SNNT.Cmd ~/bench/SNNT/snnt/src/Cmd/Main.jl:65\n [2] macro expansion\n   @ ./timing.jl:220 [inlined]\n [3] run_cmd(cmd_args::Vector{String})\n   @ SNNT.Cmd ~/bench/SNNT/snnt/src/Cmd/Main.jl:107\n [4] top-level scope\n   @ ~/bench/SNNT/snnt/deps/sysimage/trace_run.jl:14\nin expression starting at /root/bench/SNNT/snnt/deps/sysimage/trace_run.jl:14")
[ Info: ("Running ", `julia --startup-file=no --optimize=3 --output-o /root/bench/SNNT/snnt/deps/sysimage/snnt_sys.o -J/opt/julia-1.7.2/lib/julia/sys.so /root/bench/SNNT/snnt/deps/sysimage/sysimage_run.jl`)
[ Info: ("[OUT]", "/root")
[ Info: ("[OUT]", "[\"/root/.julia/environments/v1.7/Project.toml\", \"/opt/julia-1.7.2/share/julia/stdlib/v1.7\"]")
[ Info: ("[OUT]", "LOAD_PATH = [\"/root/.julia/environments/v1.7/Project.toml\", \"/opt/julia-1.7.2/share/julia/stdlib/v1.7\"]")
[ Info: ("[OUT]", "DEPOT_PATH = [\"/root/.julia\", \"/opt/julia-1.7.2/local/share/julia\", \"/opt/julia-1.7.2/share/julia\"]")
[ Info: ("[OUT]", "SNNT loaded, beginning precompilation...")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{ArrayInterface.var\"#100#104\"})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{ArrayInterface.var\"#101#105\"})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{ArrayInterface.var\"#102#106\"})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{Printf.Format{S, T} where T where S}, Base.CodeUnits{UInt8, String}, Array{Base.UnitRange{Int64}, 1}, Tuple{Printf.Spec{Base.Val{Char(0x66000000)}}, Printf.Spec{Base.Val{Char(0x66000000)}}, Printf.Spec{Base.Val{Char(0x66000000)}}}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{HDF5.var\"#109#112\"})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{HDF5.var\"#110#113\"})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{HDF5.var\"#111#114\"})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Plots._hdf5_implementation.var\"#1#2\", Base.Dict{String, Type}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{Base.Dict{Type, String}}, Base.Generator{Base.Dict{String, Type}, Plots._hdf5_implementation.var\"#1#2\"}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, String}, String, Type{Plots._hdf5_implementation.CplxTuple}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{OVERT.var\"##bound#6\", String, Bool, Nothing, Nothing, Array{Any, 1}, Bool, Bool, typeof(OVERT.bound), SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Float64, Float64, Int64})")
[ Info: ("[ERR]", "WARNING: both PGFPlots and Plots export \"Plots\"; uses of it in module OVERT must be qualified\nWARNING: both PGFPlots and Plots export \"plot\"; uses of it in module OVERT must be qualified")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###291\", Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###291\", ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(/)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(*)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#j_forwarddiff!#23\"{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Float64, 1}, Float64, Base.Generator{Array{Float64, 1}, OVERT.var\"#7#8\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}}}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(OVERT.get_yi_candidates), Array{Float64, 1}, SymEngine.var\"#36#37\"{SymEngine.var\"###291\"}, Function, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{OVERT.var\"##bound#6\", String, Bool, Nothing, Nothing, Array{Any, 1}, Bool, Bool, typeof(OVERT.bound), SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Float64, Float64, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###292\", Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###292\", ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(/)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(*)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Float64, 1}, Float64, Base.Generator{Array{Float64, 1}, OVERT.var\"#7#8\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}}}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(OVERT.get_yi_candidates), Array{Float64, 1}, SymEngine.var\"#36#37\"{SymEngine.var\"###292\"}, Function, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{OVERT.var\"##bound#6\", String, Bool, Nothing, Nothing, Array{Any, 1}, Bool, Bool, typeof(OVERT.bound), SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Float64, Float64, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###293\", Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###293\", ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(/)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(*)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#j_forwarddiff!#23\"{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Float64, 1}, Float64, Base.Generator{Array{Float64, 1}, OVERT.var\"#7#8\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}}}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(OVERT.get_yi_candidates), Array{Float64, 1}, SymEngine.var\"#36#37\"{SymEngine.var\"###293\"}, Function, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{OVERT.var\"##bound#6\", String, Bool, Nothing, Nothing, Array{Any, 1}, Bool, Bool, typeof(OVERT.bound), SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Float64, Float64, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###294\", Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###294\", ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(/)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(*)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#j_forwarddiff!#23\"{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Float64, 1}, Float64, Base.Generator{Array{Float64, 1}, OVERT.var\"#7#8\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}}}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(OVERT.get_yi_candidates), Array{Float64, 1}, SymEngine.var\"#36#37\"{SymEngine.var\"###294\"}, Function, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{OVERT.var\"##bound#6\", String, Bool, Nothing, Nothing, Array{Any, 1}, Bool, Bool, typeof(OVERT.bound), SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Float64, Float64, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###295\", Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###295\", ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(/)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(*)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Float64, 1}, Float64, Base.Generator{Array{Float64, 1}, OVERT.var\"#7#8\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}}}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(OVERT.get_yi_candidates), Array{Float64, 1}, SymEngine.var\"#36#37\"{SymEngine.var\"###295\"}, Function, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{OVERT.var\"##bound#6\", String, Bool, Nothing, Nothing, Array{Any, 1}, Bool, Bool, typeof(OVERT.bound), SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Float64, Float64, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###296\", Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{SymEngine.var\"###296\", ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(/)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(*)), ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Float64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Base.MPFR.BigFloat, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#j_forwarddiff!#23\"{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_jensen!#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Float64, 1}, Float64, Base.Generator{Array{Float64, 1}, OVERT.var\"#7#8\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}}}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF}, OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 2}, Symbol, ForwardDiff.Chunk{1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{NLSolversBase.var\"#fj_forwarddiff!#24\"{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Array{Float64, 1}, ForwardDiff.JacobianConfig{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1, Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}}}}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.:(-)), Float64, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(Base.setindex!), Array{ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, 1}, ForwardDiff.Dual{ForwardDiff.Tag{OVERT.var\"#obj_tangent_continuous!#4\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Calculus.var\"#1#3\"{SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Symbol}, Int64, Float64, Float64}, Float64}, Float64, 1}, Int64})")
[ Info: ("[OUT]", "failed to compile statement: precompile(Tuple{typeof(OVERT.get_yi_candidates), Array{Float64, 1}, SymEngine.var\"#36#37\"{SymEngine.var\"###296\"}, Function, Int64})")
